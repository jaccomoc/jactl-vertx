plugins {
  id 'java'
  id 'maven-publish'
  id 'signing'
}

group   'io.jactl'
version '1.3.0'

repositories {
  mavenLocal()
  mavenCentral()
}

java {
  withJavadocJar()
  withSourcesJar()
}

dependencies {
  implementation group: 'io.jactl', name: 'jactl',            version: '1.3.0'
  implementation group: 'io.vertx', name: 'vertx-core',       version: '4.4.6'
  implementation group: 'io.vertx', name: 'vertx-web',        version: '4.4.6'
  implementation group: 'io.vertx', name: 'vertx-web-client', version: '4.4.6'
  implementation group: 'io.vertx', name: 'vertx-hazelcast',  version: '4.4.6'
  implementation group: 'com.hazelcast', name: 'hazelcast-kubernetes', version: '2.2.3'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
  testImplementation 'io.vertx:vertx-junit5:4.4.6'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
  testRuntimeOnly    'org.junit.jupiter:junit-jupiter-engine:5.9.2'

  def isMacOS = System.getProperty('os.name').startsWith('Mac OS X')
  def architecture = System.getProperty('os.arch').toLowerCase()
  if (isMacOS && architecture == 'aarch64') {
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.90.Final:osx-aarch_64'
  }
}

test {
  useJUnitPlatform()
}

task testJar(type: Jar) {
  duplicatesStrategy 'exclude'

  from sourceSets.test.output
  from {
    configurations.testRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }

  archiveClassifier = 'tests'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      pom {
        name = 'Jactl Vert.x Library'
        description = 'Provide Jactl integration for Vert.x based applications.'
        url = 'https://github.com/jaccomoc/jactl-vertx'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'jaccomoc'
            name = 'James Crawford'
            url = 'https://github.com/jaccomoc'
          }
        }
        scm {
          connection = "scm:git:git://github.com:jaccomoc/jactl-vertx.git"
          developerConnection = "scm:git:git://github.com:jaccomoc/jactl-vertx.git"
          url = 'https://github.com/jaccomoc/jactl-vertx'
        }
      }
    }
//    mavenTestJar(MavenPublication) {
//      artifacts = [testJar]
//    }
  }
  repositories {
    maven {
      url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials(PasswordCredentials) {
        username = ossrhUsername
        password = ossrhPassword
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}
